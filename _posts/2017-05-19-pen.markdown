---
layout:     post
title:      "基于Java代码实现的喷漆笔刷"
subtitle:   " 附赠相应的Kotlin代码"
date:       2017-05-19
author:     "JadynAi"
header-img: "img/post-bg-2015.jpg"
tags:
    - Canvas
---

> 软草平莎过雨新，轻沙走马路无尘。<br>何时收拾耦耕身？

老规矩，效果图：

[项目地址]()在此，大家要是喜欢的话， 不妨点个赞吧

#### 随机算法问题

圆内随机生成点，看起来似乎很容易，实则并不简单。也算是一大坑<br>

##### R在[0,r)范围内随机取值，x在[0,R)范围内随机取值，由圆解析式![](https://images0.cnblogs.com/blog/517264/201410/142127248732998.png)求解y。同理也可由y计算x

当数量：![](https://wx1.sinaimg.cn/mw690/a28b91d8gy1frkg97p9dmj20bg0a83yp.jpg)

>当我多次对同一点触发`Down`事件时，点的密集程度趋向于稳定<br>这并非是偶然现象<br>当同时生成4000或者更多个点时，形状亦趋近于此

假设随机是趋向均匀且稳定的，那么


##### 第二种算法，在[0,360]内随机取得角度，然后在[0,r]范围内随机取值，然后使用`sin`和`cos`来求解x和y。

1000个点

- 直接使用`nextInt(R)`生成<br>
![](https://wx2.sinaimg.cn/mw690/a28b91d8gy1frkiz6hhn9j204q04qaa4.jpg)
- 使用[0,1]开根号，利用增函数属性生成<br>
![](https://wx4.sinaimg.cn/mw690/a28b91d8gy1frkiz6hp88j204p04pglp.jpg)