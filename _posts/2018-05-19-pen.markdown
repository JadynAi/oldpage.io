---
layout:     post
title:      "基于Java代码实现的喷漆笔刷"
subtitle:   " 解耦、附赠kotlin代码"
date:       2018-05-19
author:     "JadynAi"
header-img: "img/post-bg-2015.jpg"
tags:
    - Canvas
---

**原创文章，转载请联系作者**

> 软草平莎过雨新，轻沙走马路无尘。<br>何时收拾耦耕身？

先上效果图：

[笔刷项目地址](https://github.com/JadynAi/LoadingLovely/tree/master/app/src/main/java/com/example/jadynai/loadinglovely/pen)在此，大家要是喜欢的话，不妨来点个赞吧

前段为作笔刷效果，稍稍接触了`OpenGl`，无奈沉不下心来学习。只好退而求其次，使用`java`l来实现功能。<br>毫无疑问，在图形以及纹理处理上，`OpgnGL`无疑是最好用的接口。但使用`java`来实现此功能也并非一无是处，视情况及个人能力而已。

`java`不过是我个人的**舒适区**而已。。。。。。

#### 效果解析

平日里个人接触的App里，用到自定义笔刷效果的，不多，也就美图、有道云笔记里有此种功能。<br>美图……那个暂且不表，有道云笔记的手写功能是`钢笔`字体。所以，本次Demo的实现效果，参考的是`windwos`下的画图应用。

###### 对点的解析

![](https://wx4.sinaimg.cn/mw690/a28b91d8gy1frloky8xekj208t07e3ya.jpg)

> 从左至右一次是点击2次，点击8次，点击16次的效果展示<br>当数量趋向更大时，


#### 随机算法问题

圆内随机生成点，看起来似乎很容易，实则并不简单。也算是一大坑<br>

##### R在[0,r)范围内随机取值，x在[0,R)范围内随机取值，由圆解析式![](https://images0.cnblogs.com/blog/517264/201410/142127248732998.png)求解y。同理也可由y计算x

当数量：![](https://wx1.sinaimg.cn/mw690/a28b91d8gy1frkg97p9dmj20bg0a83yp.jpg)

>当我多次对同一点触发`Down`事件时，点的密集程度趋向于稳定<br>这并非是偶然现象<br>当同时生成4000或者更多个点时，形状亦趋近于此

假设随机是趋向均匀且稳定的，那么


##### 第二种算法，在[0,360]内随机取得角度，然后在[0,r]范围内随机取值，然后使用`sin`和`cos`来求解x和y。

1000个点

- 直接使用`nextInt(R)`生成<br>
![](https://wx2.sinaimg.cn/mw690/a28b91d8gy1frkiz6hhn9j204q04qaa4.jpg)
- 使用[0,1]开根号，利用增函数属性生成<br>
![](https://wx4.sinaimg.cn/mw690/a28b91d8gy1frkiz6hp88j204p04pglp.jpg)

#### 总结

做开发至今，代码在键盘、在指尖溜过，自以为积累了很多经验。<br>却发现不过是一技工而已，熟悉的无非是对API的使用，大多数时候凭借google就能解决大部分问题。直到如今，才发现数学的厉害之处。。。